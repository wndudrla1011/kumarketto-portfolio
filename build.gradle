plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.4'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'org.dsa11.team1'
version = '0.0.1-SNAPSHOT'
description = 'Demo project for Spring Boot'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6:3.1.1.RELEASE'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-websocket'
	implementation 'org.springframework:spring-messaging'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'com.amazonaws:aws-java-sdk-s3:1.12.780'
	implementation 'org.springframework.boot:spring-boot-starter-data-elasticsearch:3.1.11'
	implementation 'org.springframework.boot:spring-boot-starter-cache'
	implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6'
	implementation 'com.stripe:stripe-java:29.5.0'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	testImplementation 'org.mockito:mockito-core:5.5.0'
	testImplementation 'org.mockito:mockito-junit-jupiter:5.5.0'
	implementation platform('software.amazon.awssdk:bom:2.26.27')
	implementation 'io.awspring.cloud:spring-cloud-aws-starter-s3:3.1.1'
	implementation 'software.amazon.awssdk:s3'
	implementation 'software.amazon.awssdk:regions'
}

tasks.named('test') {
	useJUnitPlatform()
}

tasks.withType(JavaCompile) {
	options.compilerArgs += '-parameters'
}